import warnings
warnings.filterwarnings("ignore")

import os.path
import socket

$HOST = socket.gethostname()
$PATH=["/usr/bin","/usr/local/bin", "/usr/bin/vendor_perl/", "/usr/bin/core_perl/"]

$SHELL_TYPE="prompt_toolkit"

#Enable AUTO_CD
$AUTO_CD=True

#Enable vim_mode
$VI_MODE=True

# for emacs environment switching
$WORKON_HOME="/opt/miniconda3/envs"

##Helper functions

def _lock_screen(args, stdin=None):
    scrot /tmp/screen.png
    convert /tmp/screen.png -scale 10% -scale 1000% /tmp/screen.png
    i3lock -i /tmp/screen.png

def _mkcd(args, stdin=None):
    if len(args) == 1:
        mkdir -p @(args[0])
        cd @(args[0])
    else:
        return

## Alias clear explicitly to avoid miniconda interference
aliases["clear"] = "/usr/bin/clear"

## For kitty only, add alias to display images in terminal
aliases["icat"] = "kitty +kitten icat"

##Aliases (yeah... no shit, kid)
aliases["mkcd"] = _mkcd
aliases["lock"] = _lock_screen
aliases["feh"] = "feh -. --conversion-timeout 1"
aliases["dropbox"] = "dropbox-cli"
aliases["grep"] = "grep -i --color=always"
aliases["mkdir"] = "mkdir -p"
aliases["music"] = "mps"
aliases["dd"] = "dcfldd"
aliases["lookup"] = "/usr/bin/dict" #collision with Python dict
aliases["xo"] = "xdg-open"

## Rust utils
aliases["cat"] = "bat"
aliases["ls"] = "exa"
aliases["tree"] = "exa -T"

##dont go boom aliases
aliases["rm"] = "rm -I"

##advcp aliases for progress bars
#aliases["cp"] = "acp -g"
#aliases["mv"] = "amv -g"

##git aliases
aliases["gs"] = "git status" #collides with ghostscript but who cares?
aliases["ga"] = "git add"
aliases["gd"] = "git diff"
aliases["gch"] = "git checkout"
aliases["gc"] = "git commit -v"

$BROWSER="firefox"
$TERM="rxvt-unicode-256color"
$EDITOR="/usr/bin/vim"
$SUPPRESS_BRANCH_TIMEOUT_MESSAGE = True

#Encoding
$LANG="en_US.UTF-8"
$LC_ALL="en_US.UTF-8"

#default colorscheme
$XONSH_COLOR_STYLE="default"

#keep the prompt short
$DYNAMIC_CWD_WIDTH = "20%"

#ptk display stuff
$COMPLETIONS_BRACKETS = False
$COMPLETIONS_CONFIRM = True
$AUTO_SUGGEST_IN_COMPLETIONS = False

#always send xclip stuff to the system clipboard
aliases["xclip"] = ["xclip", "-sel", "clip"]

aliases["bd"] = "cd .."

aliases["borg"] = ["borg", "--remote-path=borg1"]

#silliness
$PROMPT_FIELDS["prompt_end"] = "\N{SPIRAL SHELL} "
#xontrib load prompt_bar
$PROMPT = $PROMPT.replace("BOLD_GREEN", "BOLD_WHITE")

# Updated ls with icons
xontrib load xlsd

$MULTILINE_PROMPT="°º¤ø,¸¸,ø¤º°`"

del os
del socket

source ~/github.com/gforsyth/dotfiles/xonsh/git.xsh
source ~/github.com/gforsyth/dotfiles/xonsh/gpgssh.xsh
source ~/github.com/gforsyth/dotfiles/xonsh/kubernetes.xsh
source ~/github.com/gforsyth/dotfiles/xonsh/aliases.xsh


# >>> conda initialize >>>
# !! Contents within this block are managed by "conda init" !!
import sys as _sys
from types import ModuleType as _ModuleType
_mod = _ModuleType("xontrib.conda",
                   "Autogenerated from $(/opt/miniconda3/bin/conda shell.xonsh hook)")
__xonsh__.execer.exec($("/opt/miniconda3/bin/conda" "shell.xonsh" "hook"),
                      glbs=_mod.__dict__,
                      filename="$(/opt/miniconda3/bin/conda shell.xonsh hook)")
_sys.modules["xontrib.conda"] = _mod
del _sys, _mod, _ModuleType
# <<< conda initialize <<<

